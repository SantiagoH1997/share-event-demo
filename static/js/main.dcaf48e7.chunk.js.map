{"version":3,"sources":["assets/images/outlook.svg","assets/images/apple.svg","assets/images/google.svg","assets/images/yahoo.svg","components/ShareEvent/ShareEvent.js","components/Input/Input.js","components/EventForm/EventForm.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ShareEvent","_ref","event","options","useRef","_useState","useState","_useState2","Object","slicedToArray","isExpanded","setIsExpanded","_useState3","_useState4","height","setHeight","formatDate","date","toISOString","replace","ics","data","start","end","title","description","location","join","encodeURI","react_default","a","createElement","data-share-event","onClick","ref","aria-expanded","style","href","concat","google","rel","target","src","googleIcon","alt","className","outlookIcon","outlookOnline","appleIcon","duracion","ms","minutes","Math","floor","hours","formatDuration","yahoo","yahooIcon","Input","props","Fragment","type","id","inputField","placeholder","onChange","e","value","width","length","maxWidth","autoComplete","EventForm","state","handleChange","field","_this","setState","defineProperty","handleSubmit","preventDefault","trim","Date","onSubmit","_this2","this","htmlFor","components_Input_Input","message","React","Component","App","setEvent","setMessage","components_ShareEvent_ShareEvent","components_EventForm_EventForm","parse","objectSpread","Boolean","window","hostname","match","ReactDOM","render","src_App","document","querySelector","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dcaf48e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/outlook.a1293d2c.svg\";","module.exports = __webpack_public_path__ + \"static/media/apple.7f36828d.svg\";","module.exports = __webpack_public_path__ + \"static/media/google.686f8efa.svg\";","module.exports = __webpack_public_path__ + \"static/media/yahoo.d7fcfd93.svg\";","import React, { useState, useRef } from \"react\";\nimport \"./ShareEvent.css\";\n\nimport appleIcon from \"../../assets/images/apple.svg\";\nimport googleIcon from \"../../assets/images/google.svg\";\nimport outlookIcon from \"../../assets/images/outlook.svg\";\nimport yahooIcon from \"../../assets/images/yahoo.svg\";\n\nconst ShareEvent = ({ event }) => {\n  let options = useRef(null);\n  let [isExpanded, setIsExpanded] = useState(false);\n  let [height, setHeight] = useState(0);\n\n  const formatDate = date => date.toISOString().replace(/-|:|\\.\\d+/g, \"\");\n\n  const formatDuration = ms => {\n    let minutes = Math.floor((ms / (1000 * 60)) % 60),\n      hours = Math.floor((ms / (1000 * 60 * 60)) % 24);\n    hours = hours < 10 ? \"0\" + hours : hours;\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    return hours + \"\" + minutes;\n  };\n\n  const google = event => {\n    return `https://www.google.com/calendar/event?action=TEMPLATE&text=${encodeURI(\n      event.title\n    )}&dates=${formatDate(event.start)}/${formatDate(\n      event.end\n    )}&details=${encodeURI(event.description)}&location=${encodeURI(\n      event.location\n    )}`;\n  };\n\n  const outlookOnline = event => {\n    return `https://outlook.live.com/owa/?path=%2fcalendar%2faction%2fcompose#startdt=${formatDate(\n      event.start\n    )}&enddt=${formatDate(event.end)}&subject=${encodeURI(\n      event.title\n    )}&location=${encodeURI(event.location)}&body=${encodeURI(\n      event.description\n    )}`;\n  };\n\n  const yahoo = event => {\n    var duracion = formatDuration(event.end - event.start);\n    return `https://calendar.yahoo.com/?v=60&view=d&type=20&title=${encodeURI(\n      event.title\n    )}&st=${formatDate(event.start)}&dur=${duracion}&desc=${encodeURI(\n      event.description\n    )}&in_loc=${encodeURI(event.location)}`;\n  };\n\n  const ics = event => {\n    let data = [\n      \"BEGIN:VCALENDAR\",\n      \"VERSION:2.0\",\n      \"BEGIN:VEVENT\",\n      \"DTSTART:\" + formatDate(event.start),\n      \"DTEND:\" + formatDate(event.end),\n      \"SUMMARY:\" + event.title,\n      \"DESCRIPTION:\" + event.description,\n      \"LOCATION:\" + event.location,\n      \"END:VEVENT\",\n      \"END:VCALENDAR\"\n    ].join(\"\\n\");\n\n    return encodeURI(\"data:text/calendar;charset=utf8,\" + data);\n  };\n\n  const toggleOptions = () => {\n    isExpanded ? setIsExpanded(false) : setIsExpanded(true);\n    isExpanded ? setHeight(0) : setHeight(215);\n  };\n\n  return (\n    <article data-share-event=\"share-event\">\n      <button onClick={toggleOptions} data-share-event=\"btn-toggle\">\n        Share Event\n      </button>\n      <ul\n        data-share-event=\"options\"\n        ref={options}\n        aria-expanded={isExpanded}\n        style={{ height }}\n      >\n        <a href={google(event)} rel=\"noopener noreferrer\" target=\"_blank\">\n          <li>\n            <img src={googleIcon} alt=\"Google logo\" className=\"calendar-logo\" />\n            Google\n          </li>\n        </a>\n        <a href={ics(event)}>\n          <li>\n            <img\n              src={outlookIcon}\n              alt=\"Outlook logo\"\n              className=\"calendar-logo\"\n            />\n            Outlook\n          </li>\n        </a>\n        <a\n          href={outlookOnline(event)}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          <li>\n            <img\n              src={outlookIcon}\n              alt=\"Outlook logo\"\n              className=\"calendar-logo\"\n            />\n            Outlook Online\n          </li>\n        </a>\n        <a href={ics(event)}>\n          <li>\n            <img src={appleIcon} alt=\"Apple logo\" className=\"calendar-logo\" />\n            iCalendar\n          </li>\n        </a>\n        <a href={yahoo(event)} rel=\"noopener noreferrer\" target=\"_blank\">\n          <li>\n            <img src={yahooIcon} alt=\"Yahoo logo\" className=\"calendar-logo\" />\n            Yahoo\n          </li>\n        </a>\n      </ul>\n    </article>\n  );\n};\n\nexport default ShareEvent;\n","import React from \"react\";\n\nconst Input = props => {\n  return (\n    <>\n      <input\n        type=\"text\"\n        id={props.inputField}\n        placeholder={props.placeholder}\n        onChange={e => {\n          props.onChange(e);\n        }}\n        value={`${props.value}`}\n        style={{\n          width:\n            props.value.length === 0\n              ? props.placeholder.length + \"ch\"\n              : props.value.length + \"ch\",\n          maxWidth: 210\n        }}\n        autoComplete=\"off\"\n      />\n    </>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport \"./EventForm.css\";\n\nimport Input from \"../Input/Input\";\n\nclass EventForm extends React.Component {\n  state = {\n    title: \"\",\n    description: \"\",\n    start: \"\",\n    end: \"\",\n    location: \"\"\n  };\n\n  handleChange = e => {\n    let field = e.target.id;\n    this.setState({ [field]: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const event = {\n      title: this.state.title.trim(),\n      description: this.state.description.trim(),\n      start: new Date(this.state.start.trim()),\n      end: new Date(this.state.end.trim()),\n      location: this.state.location.trim()\n    };\n    this.props.onSubmit(event);\n  };\n  render() {\n    return (\n      <section className=\"EventForm\">\n        <form>\n          <span>\n            <span className=\"red-span\">var</span>{\" \"}\n            <span className=\"blue-span\">event</span>{\" \"}\n            <span className=\"red-span\">=</span> {\"{\"}\n          </span>\n          <div className=\"label-input\">\n            <label htmlFor=\"title\">\n              <span className=\"key\">title:</span>{\" \"}\n            </label>\n            \"\n            <Input\n              inputField=\"title\"\n              placeholder=\"Test event\"\n              onChange={e => this.handleChange(e)}\n              value={`${this.state.title}`}\n            />\n            \"<span className=\"white\">,</span>\n          </div>\n          <div className=\"label-input\">\n            <label htmlFor=\"description\">\n              <span className=\"key\">description:</span>\n            </label>{\" \"}\n            \"\n            <Input\n              inputField=\"description\"\n              placeholder=\"This is a random test event\"\n              onChange={e => this.handleChange(e)}\n              value={this.state.description}\n            />\n            \"<span className=\"white\">,</span>\n          </div>\n          <div className=\"label-input\">\n            <label htmlFor=\"start\">\n              <span className=\"key\">start:</span>{\" \"}\n              <span className=\"red-span\">new</span>{\" \"}\n              <span className=\"date-span\">Date</span>('\n            </label>\n            <Input\n              inputField=\"start\"\n              placeholder=\"March 9, 2020 15:00\"\n              onChange={e => this.handleChange(e)}\n              value={this.state.start}\n            />\n            ')<span className=\"white\">,</span>\n          </div>\n          <div className=\"label-input\">\n            <label htmlFor=\"end\">\n              <span className=\"key\">end:</span>{\" \"}\n              <span className=\"red-span\">new</span>{\" \"}\n              <span className=\"date-span\">Date</span>('\n            </label>\n            <Input\n              inputField=\"end\"\n              placeholder=\"March 9, 2020 17:00\"\n              onChange={e => this.handleChange(e)}\n              value={this.state.end}\n            />\n            ')<span className=\"white\">,</span>\n          </div>\n          <div className=\"label-input\">\n            <label htmlFor=\"location\">\n              <span className=\"key\">location:</span>{\" \"}\n            </label>\n            \"\n            <Input\n              inputField=\"location\"\n              placeholder=\"Random street 947\"\n              onChange={e => this.handleChange(e)}\n              value={this.state.location}\n            />\n            \"\n          </div>\n          {\"}\"}\n          <button className=\"btn-form\" onClick={e => this.handleSubmit(e)}>\n            Generate!\n          </button>\n          {this.props.message ? (\n            <p\n              className={\n                this.props.message === \"Generated!\"\n                  ? \"message generated\"\n                  : \"message\"\n              }\n            >\n              {this.props.message}\n            </p>\n          ) : null}\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default EventForm;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n\nimport ShareEvent from \"./components/ShareEvent/ShareEvent\";\nimport EventForm from \"./components/EventForm/EventForm\";\n\nfunction App() {\n  let [event, setEvent] = useState({\n    title: \"Test event\",\n    description: \"This is a random test event\",\n    start: new Date(\"March 9, 2020 15:00\"),\n    end: new Date(\"March 9, 2020 17:00\"),\n    location: \"Random street 947\"\n  });\n\n  let [message, setMessage] = useState(null);\n\n  const handleSubmit = event => {\n    if (\n      event.title.trim().length === 0 ||\n      event.description.trim().length === 0 ||\n      event.location.trim().length === 0\n    ) {\n      setMessage(\"No fields should be empty.\");\n      return;\n    }\n    if (!Date.parse(event.start)) {\n      setMessage('\"Start\" must have the specified format.');\n      return;\n    }\n    if (!Date.parse(event.end)) {\n      setMessage('\"End\" must have the specified format.');\n      return;\n    }\n\n    setEvent({ ...event });\n    setMessage(\"Generated!\");\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">Share Event</header>\n      <ShareEvent event={event} />\n      <EventForm onSubmit={handleSubmit} message={message} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.querySelector(\"[data-share-event]\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}